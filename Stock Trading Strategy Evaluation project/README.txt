
Contributor:zelahmadi3

The Project files ( described below) require the following packages:
pandas
datetime
matplotlib.pyplot
util.py

0. Project files:

Qlearner.py 
ManualStrategy.py 
StrategyLearner.py 
indicators.py 
experiment1.py 
experiment2.py 
marketsimcode.py
testproject.py 
---------------------
1. Qlearner.py

1.1 How to Run the code
PYTHONPATH=..:. python Qlearner.py

The file Qlearner.py contains 2 function Query() and Querysestate()
Querysetsate(): out put the next action based on a given state
Query() takes next state and reward as inputs then build the Qtable of Q learner and output the next action

2. ManualStrategy.py

2.1 How to Run the code
PYTHONPATH=..:. python ManualStrategy.py

The file ManualStrategy.py contains class ManualStrategy, the class contains the function testpolicy() that takes stock symbol , trading period and start portfolio value as input
the output of testpolicy() is dataframe containing the trades that should be made to maximize porfolio performance.
stats() function calculate the cumulative retun , stdv daily return and average dail return of portfolio and benchmark and plot the both portfolios.

3. StrategyLearner.py

3.1 How to Run the code
PYTHONPATH=..:. python StrategyLearner.py

The file StrategyLearner.py contains class StrategyLearner, the class contains the follwing:
the function add_evidence(): that takes stock symbol  trading period and start portfolio value as input and train the Qlearner on this data.
testpolicy(): takes stock symbol trading period and strat values as input and 
output a dataframe containing the trades that should be made to maximize porfolio performance.
ind_disc_to_state(): discritize the iindicators and construct a state from discritized values of the indicators

4. experiment1.py
4.1 How to Run the code
PYTHONPATH=..:. python experiment1.py

The file experiment1.py contains function expperiment1() that output the charts and the stats of Manualstrategy, StrategyLearner and the Benachmark porfolios for in sample data.

5. experiment2.py
5.1 How to Run the code
PYTHONPATH=..:. python experiment2.py

The file experiment1.py contains function expperiment2() that output the charts and the stats of StrategyLearner and the for different impact value.


6. marteksimcode.py

6.1 Run the code

PYTHONPATH=..:. python marketsimcode.py

The  Marketsimcode.py contains compute_portvals() ( described below) function
this function require as input stock orders data frame, start investing value, comission and impact( default values are set to 0) 

01_ compute_portvals(): a function that output the porfolio values for each trading day for  the start date to the end date 
 compute_portvals takes as input  a data frame generated by testpolicy funtion implimented

7. testproject.py

7.1 Run the code

PYTHONPATH=..:. python testproject.py
 testproject calls stats in ManualStrategy , experiment1 and experiment2 and produce charts and stats of manual, strategy leanr and beachmark potfolios 	

